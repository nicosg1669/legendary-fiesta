#!/usr/bin/env bash
# ==============================================================================
# check_ip_full.sh ‚Äî An√°lisis de IP completo con bloques diferenciados
# Version 1.3 ‚Äî Ajuste: WHOIS cl√°sico con fallback a RDAP
# ==============================================================================

VERSION="1.3"
ABUSEIPDB_API_KEY="c3107b7e9b3eedf8a54abe0c2bf2a32ba1379afec1467520a757f17259139331136ae37844dad5c4"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# Colores y estilo
RED='\e[1;91m';   GREEN='\e[1;92m';  YELLOW='\e[1;93m'
CYAN='\e[1;96m';  WHITE='\e[1;97m';   BOLD='\e[1m';  NC='\e[0m'
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

check_deps() {
  local deps=(curl jq dig nmap whois mail)
  local miss=()
  for cmd in "${deps[@]}"; do
    command -v "$cmd" &>/dev/null || miss+=("$cmd")
  done
  if (("${#miss[@]}")); then
    echo -e "${RED}Faltan dependencias:${NC} ${miss[*]}"
    echo -e "Inst√°lalas con: sudo apt update && sudo apt install -y ${miss[*]}"
    exit 1
  fi
}
check_deps

read -p "üîé IP a analizar: " IP

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# BLOQUE 1 ‚Äî Nicol√°s Saavedra: GEO + WHOIS cl√°sico con fallback
echo -e "\n${BOLD}${CYAN}===== BLOQUE 1: GEO & WHOIS ‚Äî Nicol√°s Saavedra =====${NC}"

echo -e "-> Obteniendo geolocalizaci√≥n desde ipinfo.io..."
GEO=$(curl -s "https://ipinfo.io/${IP}/json" |
       jq -r '[.ip, .city, .region, .country, .org] | join(" | ")')
echo -e "   üåç Geolocalizaci√≥n: ${GREEN}${GEO}${NC}"

show_whois() {
  echo -e "-> Realizando consulta WHOIS (puerto 43)‚Ä¶"
  local whois_out
  whois_out=$(whois "$1" 2>/dev/null | grep -Ei 'CIDR|NetName|OrgName|Country' | uniq)
  if [[ -n "$whois_out" ]]; then
    echo -e "   ${whois_out//$'\n'/"\n   "}"
  else
    echo -e "   ‚ö†Ô∏è WHOIS cl√°sico no disponible o puerto 43 bloqueado. Usando RDAP‚Ä¶"
    local rdap
    rdap=$(curl -s "https://rdap.arin.net/registry/ip/$1")
    echo -e "   üßæ CIDR:    $(jq -r '.startAddress + "/" + .prefixLength' <<<"$rdap")"
    echo -e "   üßæ NetName: $(jq -r '.name'                         <<<"$rdap")"
    echo -e "   üßæ Country: $(jq -r '.country'                      <<<"$rdap")"
  fi
}
show_whois "$IP"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# BLOQUE 2 ‚Äî Carlos Ram√≠rez: DNSBL & AbuseIPDB cl√°sico
echo -e "\n${BOLD}${CYAN}===== BLOQUE 2: DNSBL & AbuseIPDB ‚Äî Carlos Ram√≠rez =====${NC}"

echo -e "-> Comprobando listas negras (DNSBLs)‚Ä¶"
rev=$(awk -F. '{print $4"."$3"."$2"."$1}' <<<"$IP")
count=0
for bl in zen.spamhaus.org pbl.spamhaus.org sbl.spamhaus.org xbl.spamhaus.org \
          bl.spamcop.net dnsbl.sorbs.net b.barracudacentral.org \
          dnsbl-1.uceprotect.net psbl.surriel.com; do
  if dig +short "${rev}.${bl}" | grep -qE '127\.0\.0\.[0-9]+'; then
    echo -e "   - ${RED}En lista:${NC} $bl"
    ((count++))
  else
    echo -e "   - ${GREEN}No en lista:${NC} $bl"
  fi
done
echo -e "   üìõ ${BOLD}Total DNSBLs:${NC} $count"

echo -e "-> Consultando AbuseIPDB‚Ä¶"
resp=$(curl -sG https://api.abuseipdb.com/api/v2/check \
         --data-urlencode "ipAddress=$IP" \
         -d maxAgeInDays=90 \
         -H "Key: $ABUSEIPDB_API_KEY" \
         -H "Accept: application/json")
score=$(jq -r '.data.abuseConfidenceScore // "N/A"' <<<"$resp")
reports=$(jq -r '.data.totalReports // "N/A"'    <<<"$resp")
usage=$(jq -r '.data.usageType // "N/A"'         <<<"$resp")
ctry=$(jq -r '.data.countryCode // "N/A"'       <<<"$resp")
echo -e "   üõ°Ô∏è AbuseIPDB score: ${YELLOW}${score}%${NC}, reports: ${YELLOW}${reports}${NC}"
echo -e "      uso: ${usage}, pa√≠s: ${ctry}"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# BLOQUE 3 ‚Äî Carlos Ram√≠rez: An√°lisis RDAP + Puertos Abiertos
echo -e "\n${BOLD}${CYAN}===== BLOQUE 3: An√°lisis RDAP + Puertos Abiertos ‚Äî Carlos Ram√≠rez =====${NC}"

echo -e "-> WHOIS v√≠a RDAP/HTTPS‚Ä¶"
rdap=$(curl -s "https://rdap.arin.net/registry/ip/$IP")
CIDR=$(jq -r '.startAddress + "/" + .prefixLength' <<<"$rdap")
NETNM=$(jq -r '.name'                         <<<"$rdap")
CTRY2=$(jq -r '.country'                      <<<"$rdap")
echo -e "   üßæ CIDR: ${CIDR}, NetName: ${NETNM}, Country: ${CTRY2}"

echo -e "-> Escaneo r√°pido de puertos abiertos (top 20)‚Ä¶"
open_ports=$(nmap -Pn --top-ports 20 "$IP" 2>/dev/null \
              | awk '/tcp.*open/ {print $1}' | paste -sd ',' -)

if [[ -n $open_ports ]]; then
  # Si hay alguno, los listamos
  echo "$open_ports"
else
  # Si no, indicamos que no hay ninguno :c
  echo "Ninguno"
fi

echo -e "-> Clasificando riesgo avanzado‚Ä¶"
pts=0
(( count        > 0    )) && ((pts++))
(( score        > 25   )) && ((pts++))
[[ -n "$PORTS" && "$PORTS" != "Ninguno" ]] && ((pts++))
case $pts in
  0) icon="üü¢"; lvl="BAJO";   msg="IP segura."           ;;
  1) icon="üü°"; lvl="MEDIO";  msg="Monitorear actividad." ;;
  *)  icon="üî¥"; lvl="ALTO";   msg="Bloquear/investigar." ;;
esac
echo -e "   üìå ${icon} Riesgo Avanzado: ${lvl} ‚Äî ${msg}"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# BLOQUE 4 ‚Äî Jaime M.: Reporte y env√≠o por correo
echo -e "\n${BOLD}${CYAN}===== BLOQUE 4: REPORTE Y ENV√çO POR CORREO ‚Äî Jaime M. =====${NC}"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
REPORTE="reporte_${IP}_${TIMESTAMP}.txt"

echo -e "üìÑ Generando reporte en ${REPORTE}‚Ä¶"
{
  echo "===== REPORTE DE AN√ÅLISIS DE IP ====="
  echo "IP: $IP"
  echo "Fecha: $(date)"
  echo ""
  echo "üåç GEO: $GEO"
  echo "üßæ WHOIS RDAP: CIDR=$CIDR, NetName=$NETNM, Country=$CTRY2"
  echo ""
  echo "üìõ DNSBLs: $count listas negras"
  echo "üõ° AbuseIPDB: $score% ‚Äî $reports reportes ‚Äî uso: $usage ‚Äî pa√≠s: $ctry"
  echo ""
  echo "üîì Puertos abiertos: $PORTS"
  echo "üö® Riesgo Avanzado: $lvl ‚Äî $msg"
} > "$REPORTE"

echo -e "‚úÖ Reporte guardado como ${GREEN}$REPORTE${NC}"

# Forzamos remitente para que coincida con cuenta autenticada
FROM="carlos.ramirez105@inacapmail.cl"
TO="nicolas.montero@inacapmail.cl"

echo -e "üì¨ Enviando reporte autom√°ticamente a: ${TO}"
echo "Adjunto el reporte de la IP analizada ($IP)." \
  | mail -r "$FROM" -s "Reporte IP $IP" -A "$REPORTE" "$TO"

echo -e "üìß Reporte enviado correctamente a ${GREEN}${TO}${NC}"

echo -e "\n${BOLD}${CYAN}üöÄ AN√ÅLISIS COMPLETO FINALIZADO üöÄ${NC}"
